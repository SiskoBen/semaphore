---
- name: Monitor UPS status using raw module
  hosts: diskstationjo
  become: true
  gather_facts: false

  vars:
    ups_command: "upsc ups@localhost"
    status_file: "/var/tmp/last_ups_status.txt"
    show_debug: true


  tasks:
    - name: Debug is enabled
      debug:
        msg: "Debug mode is ON"
      when: (show_debug | default(false)) | bool
      
    - name: Run upsc command via raw
      raw: "{{ ups_command }}"
      register: upsc_output
      failed_when: upsc_output.rc != 0

    - name: Display UPS status lines
      debug:
        msg: "{{ upsc_output.stdout_lines }}"
      when: (show_debug | default(false)) | bool

#    - name: Display UPS status
#      debug:
#        msg: "{{ upsc_output.stdout }}"

    - name: Extract all UPS status flags
      set_fact:
        ups_status_flags: "{{ upsc_output.stdout | regex_findall('ups.status:\\s*(.*)') | first | split(' ') }}"

#    - name: Show UPS status flags
#      debug:
#        msg: "{{ ups_status_flags }}"

#    - name: Show joined UPS output
#      debug:
#        msg: "{{ upsc_output.stdout_lines | join('\n') }}"

    - name: Extract full UPS status flags
      set_fact:
        ups_status_full: "{{ ups_status_flags | join(', ') | trim }}"
        
    - name: Show full UPS status string
      debug:
        var: ups_status_full
      when: (show_debug | default(false)) | bool
        
#    - name: Read previous UPS status via raw
#      raw: "cat {{ status_file }}"
#      register: previous_status_raw
#      ignore_errors: true

    - name: Read previous UPS status from control node
      delegate_to: localhost
      become: false
      slurp:
        src: "/tmp/last_diskstationjo_ups_status.txt"
      register: previous_status_raw
      ignore_errors: true

#    - name: Show raw previous UPS status raw
#      debug:
#        var: previous_status_raw.stdout
    
#    - name: Set previous UPS status
#      set_fact:
#        previous_status: "{{ previous_status_raw.stdout | default('') | trim}}"
        
    - name: Decode previous UPS status
      delegate_to: localhost
      become: false
      set_fact:
        previous_status: "{{ previous_status_raw.content | default('') | b64decode | trim }}"

    - name: Show raw previous UPS status
      debug:
        var: previous_status
      when: (show_debug | default(false)) | bool

#    - name: Save current UPS status to file via raw
#      raw: "echo '{{ ups_status_full }}' > {{ status_file }}"
      
    - name: Save current UPS status to control node
      delegate_to: localhost
      become: false
      copy:
        dest: "/tmp/last_diskstationjo_ups_status.txt"
        content: "{{ ups_status_full }}"
      
    - name: Show cleaned previous UPS status
      debug:
        msg: "Previous status is: '{{ previous_status }}'"
      when: (show_debug | default(false)) | bool

    - name: Show cleaned current UPS status
      debug:
        msg: "Current status is: '{{ ups_status_full }}'"
      when: (show_debug | default(false)) | bool

    - name: Alert if UPS is in alarm state
      when: "'ALARM' in ups_status_flags"
      debug:
        msg: "‚ö†Ô∏è UPS is in alarm state! UPS status flags: {{ ups_status_full }}"
      when: (show_debug | default(false)) | bool

    - name: Send Discord alert if ALARM is present
      delegate_to: localhost
      become: false
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body:
          content: "üö® UPS ALERT: DiskstationJo - Status contains ALARM! UPS status flags: {{ ups_status_full }}"
        headers:
          Content-Type: application/json
        status_code: 204
      when:
        - "'ALARM' in ups_status_flags"
        - "'ALARM' not in previous_status"

    - name: Send Discord alert if UPS status changed
      delegate_to: localhost
      become: false
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body:
          content: |
            üîÑ UPS status DiskstationJo changed!
            Previous: {{ previous_status }}=
            Current: {{ ups_status_full }}=
        headers:
          Content-Type: application/json
        status_code: 204
      when: ups_status_full != previous_status

    - name: Alert if UPS is on battery
      when: "'OB' in ups_status_flags"
      debug:
        msg: "‚ö†Ô∏è UPS is running on battery!"
      when: (show_debug | default(false)) | bool

    - name: Alert if UPS battery is low
      when: "'LB' in ups_status_flags"
      debug:
        msg: "üîã UPS battery is low!"
      when: (show_debug | default(false)) | bool

