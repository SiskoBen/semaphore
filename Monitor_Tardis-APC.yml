---
- name: Monitor UPS status using raw module
  hosts: tardis
  become: true
  gather_facts: false

  vars:
    ups_command: "upsc ups@localhost"
    status_file: "/var/tmp/last_ups_status.txt"

  tasks:

    - name: Run upsc command via raw
      raw: "{{ ups_command }}"
      register: upsc_output
      failed_when: upsc_output.rc != 0

    - name: Display UPS status
      debug:
        msg: "{{ upsc_output.stdout_lines }}"

#    - name: Extract UPS status flags
#      set_fact:
#        ups_status_flags: >-
#          {{ (upsc_output.stdout | regex_search('ups.status:\\s*(.*)', '\\1') | default('') | split(' ')) }}

#    - name: Extract UPS status flags
#      set_fact:
#        ups_status_flags: >-
#          {{ (upsc_output.stdout | regex_findall('ups.status:\\s*(.*)') | first | default('') | split(' ')) }}

    - name: Show joined UPS output
      debug:
        msg: "{{ upsc_output.stdout_lines | join('\n') }}"
        
    - name: Extract UPS status flags
      set_fact:
        ups_status_flags: >-
          {{ (upsc_output.stdout_lines | join('\n') | regex_findall('ups.status:\\s*(.*)') | first | default('') | split(' ')) }}
          
    - name: Compose full UPS status string
      set_fact:
        ups_status_full: "{{ ups_status_flags | join(', ') }}"

    - name: Show full UPS status string
      debug:
        var: ups_status_full
        
    - name: Read previous UPS status via raw
      raw: "cat {{ status_file }}"
      register: previous_status_raw
      ignore_errors: true

    - name: Show raw previous UPS status
      debug:
        var: previous_status_raw.stdout
    
    - name: Set previous UPS status
      set_fact:
        previous_status: "{{ previous_status_raw.stdout | default('') }}"

    - name: Save current UPS status to file via raw
      raw: "echo '{{ ups_status_full }}' > {{ status_file }}"

    - name: Alert if UPS is in alarm state
      when: "'ALARM' in ups_status_flags"
      debug:
        msg: "‚ö†Ô∏è UPS is in alarm state! UPS status flags: {{ ups_status_full }}"

    - name: Send Discord alert if ALARM is present
      delegate_to: localhost
      become: false
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body:
          content: "üö® UPS ALERT: Tardis - Status contains ALARM! UPS status flags: {{ ups_status_full }}"
        headers:
          Content-Type: application/json
        status_code: 204
      when:
        - "'ALARM' in ups_status_flags"
        - "'ALARM' not in previous_status"

    - name: Send Discord alert if UPS status changed
      delegate_to: localhost
      become: false
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body:
          content: |
            üîÑ UPS status Tardis changed!
            Previous: {{ previous_status }}
            Current: {{ ups_status_full }}
        headers:
          Content-Type: application/json
        status_code: 204
      when: ups_status_full != previous_status

    - name: Alert if UPS is on battery
      when: "'OB' in ups_status_flags"
      debug:
        msg: "‚ö†Ô∏è UPS is running on battery!"

    - name: Alert if UPS battery is low
      when: "'LB' in ups_status_flags"
      debug:
        msg: "üîã UPS battery is low!"
