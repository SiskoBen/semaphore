---
- name: Monitor all core temperatures via sensors JSON and alert Discord
  hosts: Hardware
  become: false
  vars:
    discord_webhook: "{{ discord_webhook}}"
    sensor_group: "coretemp-isa-0000"
    threshold: 70

  tasks:
    - name: Get JSON output from sensors
      command: sensors -j
      register: sensors_raw
      changed_when: false

    - name: Parse JSON output
      set_fact:
        sensors_json: "{{ sensors_raw.stdout | from_json }}"

    - name: Build temperature summary
      set_fact:
        temp_summary: >-
          {% set lines = [] %}
          {% for item in sensors_json[sensor_group] | dict2items %}
            {% if item.key is match("^Core [0-9]+$") %}
              {% for attr_name, value in item.value.items() %}
                {% if attr_name is match("^temp[0-9]+_input$") %}
                  {% set lines = lines + [ item.key ~ ": " ~ value ~ "Â°C" ] %}
                {% endif %}
              {% endfor %}
            {% endif %}
          {% endfor %}
          {{ lines | join(', ') }}

    - name: Check if any core exceeds threshold
      set_fact:
        hot_core_found: >-
          {% set hot = false %}
          {% for item in sensors_json[sensor_group].values() %}
            {% for val in item.values() %}
              {% if val is number and val > threshold %}
                {% set hot = true %}
              {% endif %}
            {% endfor %}
          {% endfor %}
          {{ hot }}

    - name: Send Discord alert if any core is too hot
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body: >
          {
            "content": "ðŸ”¥ {{ inventory_hostname }}: CPU temperature alert!\nThreshold: {{ threshold }}Â°C\n{{ temp_summary }}"
          }
        headers:
          Content-Type: application/json
        status_code: 204
      when: hot_core_found
